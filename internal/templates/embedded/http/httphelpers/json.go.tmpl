package httphelpers

import (
	"encoding/json"
	"errors"
	"io"
	"net/http"
)

const maxBytes int64 = 1_048_576

// JSONDecode will try to decode json into pointer v. In case of unknown fields, they will be ignored
func JSONDecode(w http.ResponseWriter, r *http.Request, v any) error {
	return jsonDecode(w, r, v, true)
}

// JSONDecode will try to decode json into pointer v. In case of unknown fields, an error will be returned
func JSONDecodeNoUnknownFieldsAllowed(w http.ResponseWriter, r *http.Request, v any) error {
	return jsonDecode(w, r, v, false)
}

func jsonDecode(w http.ResponseWriter, r *http.Request, v any, allowUnknownFields bool) error {
	r.Body = http.MaxBytesReader(w, r.Body, maxBytes)

	decoder := json.NewDecoder(r.Body)
	if !allowUnknownFields {
		decoder.DisallowUnknownFields()
	}
	err := decoder.Decode(v)
	if err != nil {
		return err
	}

	if e := decoder.Decode(&struct{}{}); e != io.EOF {
		err = errors.New("body must only contain a single JSON value")
		return err
	}

	return nil
}
